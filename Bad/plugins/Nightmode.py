import random
import asyncio
from pyrogram import Client, filters, enums
import datetime
from Bad import app
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ChatPermissions
from Bad.database.nightmodedb import nightdb, nightmode_on, nightmode_off, get_nightchats


CLOSE_CHAT = ChatPermissions(
    can_send_messages=False,
    can_send_media_messages=False,
    can_send_polls=False,
    can_change_info=False,
    can_add_web_page_previews=False,
    can_pin_messages=False,
    can_invite_users=False
)

OPEN_CHAT = ChatPermissions(
    can_send_messages=True,
    can_send_media_messages=True,
    can_send_polls=True,
    can_change_info=True,
    can_add_web_page_previews=True,
    can_pin_messages=True,
    can_invite_users=True
)

buttons = InlineKeyboardMarkup([
    [InlineKeyboardButton("·¥á…¥·¥Ä ô ü·¥á", callback_data="add_night"),
     InlineKeyboardButton("·¥Ö…™s·¥Ä ô ü·¥á", callback_data="rm_night")]
])


@app.on_message(filters.command("nightmode") & filters.group)
async def _nightmode(_, message):
    return await message.reply_photo(
        photo="https://telegra.ph/file/91370f62c00ccc0c69841.jpg",
        caption="**·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥á ü·¥è·¥°  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥á…¥·¥Ä ô ü·¥á ·¥è Ä ·¥Ö…™s·¥Ä ô ü·¥á …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**",
        reply_markup=buttons
    )


@app.on_callback_query(filters.regex("^(add_night|rm_night)$"))
async def nightcb(_, query: CallbackQuery):
    data = query.data
    chat_id = query.message.chat.id
    user_id = query.from_user.id
    check_night = await nightdb.find_one({"chat_id": chat_id})
    administrators = []
    async for m in app.get_chat_members(chat_id, filter=enums.ChatMembersFilter.ADMINISTRATORS):
        administrators.append(m.user.id)
    if user_id in administrators:
        if data == "add_night":
            if check_night:
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥á…¥·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")
            elif not check_night:
                await nightmode_on(chat_id)
                await query.message.edit_caption("**‡πè ·¥Ä·¥Ö·¥Ö·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ ·¥õ·¥è ·¥ç è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á. ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò ·¥°…™ ü ü  ô·¥á ·¥Ñ ü·¥ès·¥á·¥Ö ·¥è…¥ ùü∑ùü∏·¥Ä·¥ç [IST] ·¥Ä…¥·¥Ö ·¥°…™ ü ü ·¥è·¥ò·¥á…¥·¥á·¥Ö ·¥è…¥ ùü∂ùüº·¥Ä·¥ç [IST].**")
        if data == "rm_night":
            if check_night:
                await nightmode_off(chat_id)
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö “ì Ä·¥è·¥ç ·¥ç è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á!**")
            elif not check_night:
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")


async def start_nightmode():
    chats = await get_nightchats()
    for chat in chats:
        chat_id = int(chat["chat_id"])
        try:
            await app.send_photo(
                chat_id,
                photo="https://telegra.ph/file/83a4c8921c49934558542.jpg",
                caption="**B·¥á“ì·¥è Ä·¥á  è·¥è·¥ú …¢·¥è ·¥õ·¥è s ü·¥á·¥á·¥ò\n·¥Ö·¥è …¥·¥è·¥õ “ì·¥è Ä…¢·¥á·¥õ ·¥õ·¥è s·¥Ä è ·¥õ ú·¥Ä…¥·¥ãs “ì·¥è Ä ·¥á·¥†·¥á Ä è·¥õ ú…™…¥…¢ …¢·¥è·¥è·¥Ö ·¥õ ú·¥Ä·¥õ  ú·¥Äs  ú·¥Ä·¥ò·¥ò·¥á…¥·¥á·¥Ö ·¥õ·¥è  è·¥è·¥ú …™…¥ ·¥õ ú·¥á  ü·¥Äs·¥õ ùü∏ùü∫  ú·¥è·¥ú Äs. I ·¥Ä·¥ç ·¥õ ú·¥Ä…¥·¥ã“ì·¥ú ü ·¥Ä·¥õ ·¥õ ú·¥á ·¥ç·¥è·¥ç·¥á…¥·¥õ “ì·¥è Ä  è·¥è·¥ú**"
            )
            await app.set_chat_permissions(chat_id, CLOSE_CHAT)
        except Exception as e:
            print(f"Unable to close Group {chat_id} - {e}")


async def close_nightmode():
    chats = await get_nightchats()
    for chat in chats:
        chat_id = int(chat["chat_id"])
        try:
            await app.send_photo(
                chat_id,
                photo="https://telegra.ph/file/d289562698b698711c3cd.jpg",
                caption="**N·¥è ·¥ç·¥Ä·¥õ·¥õ·¥á Ä  ú·¥è·¥°  ô·¥Ä·¥Ö ·¥õ ú…™…¥…¢s ·¥Ä Ä·¥á,  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ä·¥õ  ü·¥á·¥Äs·¥õ  ô·¥á  ú·¥Ä·¥ò·¥ò è ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú ·¥°·¥è·¥ã·¥á ·¥ú·¥ò ·¥õ ú…™s ·¥ç·¥è Ä…¥…™…¥…¢**"
            )
            await app.set_chat_permissions(chat_id, OPEN_CHAT)
        except Exception as e:
            print(f"Unable to open Group {chat_id} - {e}")


async def nightmode_scheduler():
    while True:
        now = datetime.datetime.now()
        # Calculate the time until the next midnight (IST)
        midnight = datetime.datetime.combine(now.date(), datetime.time(23, 59, 0))
        if now > midnight:
            midnight += datetime.timedelta(days=1)
        time_to_midnight = (midnight - now).total_seconds()

        # Sleep until midnight
        await asyncio.sleep(time_to_midnight)

        # Start nightmode
        await start_nightmode()

        # Sleep until 6:01 AM IST
        time_to_morning = (datetime.datetime.combine(midnight.date(), datetime.time(6, 1, 0)) - datetime.datetime.now()).total_seconds()
        await asyncio.sleep(time_to_morning)

        # Close nightmode
        await close_nightmode()


asyncio.create_task(nightmode_scheduler())


__MODULE__ = "…¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á"
__HELP__ = """ 

## …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á üåÉ

¬ª `/nightmode <enable|disable>` : ·¥á…¥·¥Ä ô ü·¥á ·¥õ·¥è ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ·¥Ä ü ü è ·¥Ñ ü·¥èÍú±·¥á …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥õ 12·¥Ä·¥ç ·¥Ä…¥·¥Ö  Ä·¥á·¥è·¥ò·¥á…¥ ·¥Ä·¥õ 6·¥Ä·¥ç ·¥Ö·¥Ä…™ ü è

‚ùñ ·¥úÍú±·¥á Íú∞·¥è Ä ·¥õ·¥á·¥ç·¥ò·¥è Ä·¥Ä Ä è …¢ Ä·¥è·¥ú·¥ò  ü·¥è·¥Ñ·¥ã ·¥Ö·¥ú Ä…™…¥…¢ …¥…™…¢ ú·¥õ  ú·¥è·¥ú ÄÍú±

"""

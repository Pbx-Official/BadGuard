import os
from PIL import Image, ImageDraw, ImageFont
import requests
import random 
from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from Bad.database.pretenderdb import impo_off, impo_on, check_pretender, add_userdata, get_userdata, usr_data
from Bad import app
from Bad.database import ZeroTwo


BUTTON = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                text="·¥ã…™·¥Ö…¥·¥Ä·¥ò ·¥ç·¥á",
                url=f"https://t.me/{app.username}?startgroup=new",
            ),
            InlineKeyboardButton(
                text="·¥Ñ ü·¥ès·¥á ",
                callback_data="close",
            )
        ]
    ]
)


async def download_pic(user_id):
    user = await app.get_users(user_id)
    if user.photo:
        file_path = await app.download_media(user.photo.big_file_id)
        return file_path
    else:
        return "assets/NODP.PNG"

async def genimposterimg(user_id, username, first_name, thumb):
    photo_path = await download_pic(user_id)
    background = Image.open(f"resources/image/I/{thumb}.png")
    user_photo = Image.open(photo_path)
    user_photo = user_photo.resize((900, 900))
    mask = Image.new("L", (900, 900), 0) 
    draw = ImageDraw.Draw(mask)
    draw.ellipse((0, 0, 900, 900), fill=255)
    user_photo.putalpha(mask.resize(user_photo.size))  
    background.paste(user_photo, (223, 317), user_photo) 
    draw = ImageDraw.Draw(background)

    impostor_path = f"impostor_{user_id}.png"
    background.save(impostor_path)

    return impostor_path



@app.on_message(filters.group & ~filters.bot & ~filters.via_bot, group=69)
async def chk_usr(_, message: Message):
    if message.sender_chat or not await check_pretender(message.chat.id):
        return
    thumb = random.choice(ZeroTwo)
    if not await usr_data(message.from_user.id):
        return await add_userdata(
            message.from_user.id,
            message.from_user.username,
            message.from_user.first_name,
            message.from_user.last_name,
        )
    usernamebefore, first_name, lastname_before = await get_userdata(message.from_user.id)
    msg = ""
    if (
        usernamebefore != message.from_user.username
        or first_name != message.from_user.first_name
        or lastname_before != message.from_user.last_name
    ):
        msg += f"""
**·¥ús·¥á Ä s ú·¥è Ä·¥õ …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ **

**‡πè …¥·¥Ä·¥ç·¥á** ‚ûõ {message.from_user.mention}
**‡πè ·¥ús·¥á Ä …™·¥Ö** ‚ûõ {message.from_user.id}
"""
    if usernamebefore != message.from_user.username:
        usernamebefore = f"@{usernamebefore}" if usernamebefore else "NO USERNAME"
        usernameafter = (
            f"@{message.from_user.username}"
            if message.from_user.username
            else "NO USERNAME"
        )
        msg += """
** ·¥Ñ ú·¥Ä…¥…¢·¥á·¥Ö ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á **

**‡πè ·¥°…™·¥õ ú·¥è·¥ú·¥õ ·¥Ñ ú·¥Ä…¥…¢·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á** ‚ûõ {bef}
**‡πè ·¥Ä“ì·¥õ·¥á Ä ·¥Ñ ú·¥Ä…¥…¢·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á** ‚ûõ {aft}
""".format(bef=usernamebefore, aft=usernameafter)
        await add_userdata(
            message.from_user.id,
            message.from_user.username,
            message.from_user.first_name,
            message.from_user.last_name,
        )
    if first_name != message.from_user.first_name:
        msg += """
** ·¥Ñ ú·¥Ä…¥…¢·¥ás “ì…™ Äs·¥õ …¥·¥Ä·¥ç·¥á **

**‡πè ·¥°…™·¥õ ú·¥è·¥ú·¥õ ·¥Ñ ú·¥Ä…¥…¢·¥á “ì Ä…™s·¥õ …¥·¥Ä·¥ç·¥á** ‚ûõ {bef}
**‡πè ·¥Ä“ì·¥õ·¥á Ä ·¥Ñ ú·¥Ä…¥…¢·¥á “ì Ä…™s·¥õ …¥·¥Ä·¥ç·¥á** ‚ûõ {aft}
""".format(
            bef=first_name, aft=message.from_user.first_name
        )
        await add_userdata(
            message.from_user.id,
            message.from_user.username,
            message.from_user.first_name,
            message.from_user.last_name,
        )
    if lastname_before != message.from_user.last_name:
        lastname_before = lastname_before or "NO LAST NAME"
        lastname_after = message.from_user.last_name or "NO LAST NAME"
        msg += """
**·¥Ñ ú·¥Ä…¥…¢·¥ás  ü·¥Äs·¥õ …¥·¥Ä·¥ç·¥á **

**‡πè ·¥°…™·¥õ ú·¥è·¥ú·¥õ ·¥Ñ ú·¥Ä…¥…¢·¥á  ü·¥Äs·¥õ …¥·¥Ä·¥ç·¥á** ‚ûõ {bef}
**‡πè ·¥Ä“ì·¥õ·¥á Ä ·¥Ñ ú·¥Ä…¥…¢·¥á  ü·¥Äs·¥õ …¥·¥Ä·¥ç·¥á** ‚ûõ {aft}
""".format(
            bef=lastname_before, aft=lastname_after
        )
        await add_userdata(
            message.from_user.id,
            message.from_user.username,
            message.from_user.first_name,
            message.from_user.last_name,
        )
    if msg != "":
        Imposterimg = await genimposterimg(
            message.from_user.id,
            message.from_user.username,
            message.from_user.first_name,
            thumb,
        )
        await message.reply_photo(Imposterimg, caption=msg, reply_markup=BUTTON)

# HEHE
@app.on_message(filters.group & filters.command("imposter") & ~filters.bot & ~filters.via_bot)
async def set_mataa(_, message: Message):
    if len(message.command) == 1:
        return await message.reply("**·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ ·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä ·¥ús·¥á Äs ·¥ús·¥Ä…¢·¥á ** \n /imposter enable or disable")
    if message.command[1] == "enable":
        cekset = await impo_on(message.chat.id)
        if cekset:
            await message.reply("**·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥á…¥·¥Ä ô ü·¥á·¥Ö.**")
        else:
            await impo_on(message.chat.id)
            await message.reply(f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥á…¥·¥Ä ô ü·¥á·¥Ö ·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä ·¥ç·¥è·¥Ö·¥á “ì·¥è Ä** {message.chat.title}")
    elif message.command[1] == "disable":
        cekset = await impo_off(message.chat.id)
        if not cekset:
            await message.reply("**·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö.**")
        else:
            await impo_off(message.chat.id)
            await message.reply(f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö ·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä ·¥ç·¥è·¥Ö·¥á “ì·¥è Ä** {message.chat.title}")
    else:
        await message.reply("**·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ ·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä ·¥ús·¥á Äs ·¥ús·¥Ä…¢·¥á : ·¥ò Ä·¥á·¥õ·¥á…¥·¥Ö·¥á Ä enable|disable**")

__MODULE__ = "…™·¥ç·¥ò·¥èÍú±·¥õ·¥á Ä"
__HELP__ = """ 

## …™·¥ç·¥ò·¥èÍú±·¥õ·¥á Ä üïµÔ∏è

¬ª `/imposter [enable | disable]` :
·¥õ ú…™Íú± ·¥õ·¥è…¢…¢ ü·¥áÍú± ·¥õ ú·¥á **…™·¥ç·¥ò·¥èÍú±·¥õ·¥á Ä ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥** Íú∞·¥á·¥Ä·¥õ·¥ú Ä·¥á.

‚Ä¢ ·¥° ú·¥á…¥ ·¥Ä ·¥úÍú±·¥á Ä ·¥Ñ ú·¥Ä…¥…¢·¥áÍú± ·¥õ ú·¥á…™ Ä:
  - Íú∞…™ ÄÍú±·¥õ …¥·¥Ä·¥ç·¥á
  -  ü·¥ÄÍú±·¥õ …¥·¥Ä·¥ç·¥á
  - ·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á

¬ª ·¥õ ú·¥á  ô·¥è·¥õ ·¥°…™ ü ü ·¥Ä·¥ú·¥õ·¥è·¥ç·¥Ä·¥õ…™·¥Ñ·¥Ä ü ü è Íú±·¥á…¥·¥Ö ·¥Ä Íú±·¥õ è ü…™Íú± ú …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥ ·¥õ ú·¥ú·¥ç ô…¥·¥Ä…™ ü ·¥°…™·¥õ ú ·¥õ ú·¥á…™ Ä …¥·¥á·¥° ·¥Ö·¥á·¥õ·¥Ä…™ üÍú± …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò.

"""
